{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "8bit-calendar",
  "type": "registry:component",
  "title": "8-bit Calendar",
  "description": "A simple 8-bit calendar component",
  "registryDependencies": [
    "calendar"
  ],
  "files": [
    {
      "path": "components/ui/8bit/calendar.tsx",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\nimport { DayPicker } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { Calendar as ShadcnCalendar } from \"@/components/ui/calendar\";\n\nimport { buttonVariants } from \"./button\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"./select\";\nimport \"./styles/retro.css\";\n\nexport const calendarVariants = cva(\"\", {\n  variants: {\n    font: {\n      normal: \"\",\n      retro: \"retro\",\n    },\n  },\n  defaultVariants: {\n    font: \"retro\",\n  },\n});\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> &\n  VariantProps<typeof calendarVariants>;\n\nfunction Calendar({ className, classNames, font, ...props }: CalendarProps) {\n  return (\n    <div\n      className={cn(\n        \"bg-popover relative border-y-6 border-foreground dark:border-ring w-max\",\n        className\n      )}\n    >\n      <ShadcnCalendar\n        className={cn(\n          calendarVariants({\n            className,\n            font,\n          })\n        )}\n        classNames={{\n          nav_button: cn(\n            buttonVariants({ variant: \"outline\" }),\n            \"size-7 bg-transparent p-0 flex items-center justify-center hover:opacity-50 border-2 border-foreground dark:border-ring\"\n          ),\n          day_button: cn(\n            buttonVariants({ variant: \"ghost\" }),\n            \"h-10 p-2 font-normal aria-selected:opacity-100\"\n          ),\n          caption_label: \"text-xs font-medium\",\n          ...classNames,\n        }}\n        components={{\n          MonthsDropdown: ({ className, ...props }) => {\n            const currentMonth = props.value as number;\n\n            const months = [\n              \"January\",\n              \"February\",\n              \"March\",\n              \"April\",\n              \"May\",\n              \"June\",\n              \"July\",\n              \"August\",\n              \"September\",\n              \"October\",\n              \"November\",\n              \"December\",\n            ];\n\n            const currentMonthName = months[currentMonth];\n\n            return (\n              <div className={cn(\"flex flex-col gap-3 text-xs\", className)}>\n                <Select defaultValue={currentMonthName}>\n                  <SelectTrigger id=\"dropdown\" className=\"bg-background w-full\">\n                    <SelectValue placeholder=\"Dropdown\" />\n                  </SelectTrigger>\n                  <SelectContent align=\"center\">\n                    {months.map((month) => (\n                      <SelectItem key={month} value={month}>\n                        {month}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            );\n          },\n          YearsDropdown: ({ className }) => {\n            const currentYear = new Date().getFullYear();\n            const years = Array.from(\n              { length: currentYear - 1925 + 1 },\n              (_, i) => 1925 + i\n            );\n\n            return (\n              <div className={cn(\"flex flex-col gap-3 text-xs\", className)}>\n                <Select defaultValue={currentYear?.toString()}>\n                  <SelectTrigger id=\"dropdown\" className=\"bg-background w-full\">\n                    <SelectValue placeholder=\"Dropdown\" />\n                  </SelectTrigger>\n                  <SelectContent align=\"center\">\n                    {years.map((year) => (\n                      <SelectItem key={year} value={year.toString()}>\n                        {year}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            );\n          },\n          Chevron: ({ className, ...props }) => {\n            if (props.orientation === \"left\") {\n              return (\n                <svg\n                  viewBox=\"0 0 256 256\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"0.25\"\n                  color=\"\"\n                  className={cn(\"size-4 shrink-0\", className)}\n                  aria-label=\"chevron-left\"\n                  {...props}\n                >\n                  <rect\n                    width=\"14\"\n                    height=\"14\"\n                    rx=\"1\"\n                    transform=\"matrix(-1 0 0 1 128 136)\"\n                  ></rect>\n                  <rect\n                    width=\"14\"\n                    height=\"14\"\n                    rx=\"1\"\n                    transform=\"matrix(-1 0 0 1 144 152)\"\n                  ></rect>\n                  <rect\n                    width=\"14\"\n                    height=\"14\"\n                    rx=\"1\"\n                    transform=\"matrix(-1 0 0 1 160 72)\"\n                  ></rect>\n                  <rect\n                    width=\"14\"\n                    height=\"14\"\n                    rx=\"1\"\n                    transform=\"matrix(-1 0 0 1 160 168)\"\n                  ></rect>\n                  <rect\n                    width=\"14\"\n                    height=\"14\"\n                    rx=\"1\"\n                    transform=\"matrix(-1 0 0 1 112 120)\"\n                  ></rect>\n                  <rect\n                    width=\"14\"\n                    height=\"14\"\n                    rx=\"1\"\n                    transform=\"matrix(-1 0 0 1 128 104)\"\n                  ></rect>\n                  <rect\n                    width=\"14\"\n                    height=\"14\"\n                    rx=\"1\"\n                    transform=\"matrix(-1 0 0 1 144 88)\"\n                  ></rect>\n                </svg>\n              );\n            }\n\n            return (\n              <svg\n                viewBox=\"0 0 256 256\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                stroke=\"currentColor\"\n                strokeWidth=\"0.25\"\n                color=\"\"\n                className={cn(\"size-4 shrink-0\", className)}\n                aria-label=\"chevron-right\"\n                {...props}\n              >\n                <rect x=\"128\" y=\"136\" width=\"14\" height=\"14\" rx=\"1\"></rect>\n                <rect x=\"112\" y=\"152\" width=\"14\" height=\"14\" rx=\"1\"></rect>\n                <rect x=\"96\" y=\"72\" width=\"14\" height=\"14\" rx=\"1\"></rect>\n                <rect x=\"96\" y=\"168\" width=\"14\" height=\"14\" rx=\"1\"></rect>\n                <rect x=\"144\" y=\"120\" width=\"14\" height=\"14\" rx=\"1\"></rect>\n                <rect x=\"128\" y=\"104\" width=\"14\" height=\"14\" rx=\"1\"></rect>\n                <rect x=\"112\" y=\"88\" width=\"14\" height=\"14\" rx=\"1\"></rect>\n              </svg>\n            );\n          },\n        }}\n        {...props}\n      />\n\n      <div\n        className=\"absolute inset-0 border-x-6 -mx-1.5 border-foreground dark:border-ring pointer-events-none\"\n        aria-hidden=\"true\"\n      />\n    </div>\n  );\n}\n\nexport { Calendar };\n",
      "type": "registry:component",
      "target": "components/ui/8bit/calendar.tsx"
    },
    {
      "path": "components/ui/8bit/styles/retro.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\n\n.retro {\n  font-family:\n    \"Press Start 2P\",\n    system-ui,\n    -apple-system,\n    sans-serif;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n}\n",
      "type": "registry:component",
      "target": "components/ui/8bit/styles/retro.css"
    }
  ]
}